// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSSecond

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWStructuredBuffer<float3> vertices;
StructuredBuffer<float3> defaultVertices; //to check maximum deform and also use it for elasticity, only gets set once, this will change if we go beyond maxElasticity and cause a plastic deformation

float3 grabPosition;
float3 currentPosition;
float grabRadius;
float maxElasticity;
float maxDeform;

float distance(float3 point1, float3 point2)
{
    float x = point1.x - point2.x;
    float y = point1.y - point2.y;
    float z = point1.z - point2.z;

    return sqrt(x*x + y*y + z*z);
}

float3 direction(float3 point1, float3 point2)
{
    return normalize(point1 - point2);
}

[numthreads(512, 1, 1)]
void CSSecond (uint3 id : SV_DispatchThreadID)
{
    float3 vertex = vertices[id.x];
    float3 defaultVertex = defaultVertices[id.x]; 
    
    if(distance(vertex,grabPosition)<grabRadius) //inside our grab sphere so it takes a chunk then moves it
    {
        vertex += currentPosition-grabPosition;
    }
    //do displacement calculations, check maxElasticity, maxDeform variables to determine elastic, plastic and ruptures.
    //but i don't have any energy left. i'm on this for the last 4 days uninterrupted and from 5 am today till now.
    else 
    {
        
    }

    vertices[id.x] = vertex;
}
